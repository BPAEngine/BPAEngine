
# -------------------------------------------------------------------------
# Sprite Animations
# -------------------------------------------------------------------------

BPAE.SpriteAnimation = fun (config)
  {
    new_animation = [] | global.BPAE.SpriteAnimation;
    new_animation.filename = config.filename | "animation-";
    new_animation.frames_number = config.frames_number | 1;
    new_animation.length = config.length | 1.0;
    new_animation.loop = config.loop | -1;
    new_animation.speed = config.speed | 1.0;

    new_animation.frame_duration = new_animation.length / new_animation.frames_number;
    new_animation.running = 0;
    new_animation.actual_time = 0.0;
    new_animation.actual_frame = 0;
    new_animation.frames = [];

    return new_animation;
  } | [];

BPAE.SpriteAnimation.LoadImages = fun ()
  {
    for (local.i = 0; local.i < frames_number; local.i++)
    {
      frames[local.i] = Image("sprites/" + filename + local.i + ".png");
    }
  };

BPAE.SpriteAnimation.Update = fun (delta, theta)
  {
    if (running)
    {
      actual_time += delta * speed;
      if (actual_time >= length)
      {
        if (loop != 0)
        {
          if (loop > 0)
            loop--;
          Play(0.0);
        }
        else
        {
          Stop();
          return;
        }
      }
      actual_frame = Math.Clamp(Math.Int(actual_time / frame_duration), 0, frames_number - 1);
      if (sprite)
        sprite.SetImage(frames[actual_frame].Rotate(theta));
    }
  };

BPAE.SpriteAnimation.Play = fun (start)
  {
    actual_time = start | actual_time;
    running = 1;
  };

BPAE.SpriteAnimation.Pause = fun ()
  {
    running = 0;
  };

BPAE.SpriteAnimation.Stop = fun ()
  {
    actual_time = 0.0;
    running = 0;
  };
