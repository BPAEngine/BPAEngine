
# -------------------------------------------------------------------------
# Sprite Animations
# -------------------------------------------------------------------------

BPAE.INFINITE_LOOP = -1;

BPAE.SpriteAnimation = fun (config)
  {
    local.new_animation = [] | global.BPAE.SpriteAnimation;
    new_animation.filename = config.filename | "animation-";
    new_animation.digits = config.digits | FALSE;
    new_animation.start_frame = config.start_frame | 0;
    new_animation.end_frame = config.end_frame | 0;
    new_animation.length = config.length | 1.0;
    new_animation.loop = config.loop | BPAE.INFINITE_LOOP;
    new_animation.rebound = config.rebound | FALSE;
    new_animation.direction = config.direction | "forward";
    new_animation.speed = config.speed | 1.0;

    new_animation.frames_number = new_animation.end_frame - new_animation.start_frame + 1;
    new_animation.frame_duration = new_animation.length / new_animation.frames_number;
    new_animation.running = 0;
    new_animation.actual_time = 0.0;
    new_animation.actual_frame = 0;
    new_animation.frames = [];

    return new_animation;
  } | [];

BPAE.SpriteAnimation.LoadImages = fun ()
  {
    local.base_path = "sprites/" + filename;
    for (local.i = start_frame; local.i <= end_frame; local.i++)
    {
      local.string_index = "" + i;
      if (digits) {
        local.zeros_needed = digits - String.Size(string_index);
        for (local.j = 0; local.j < zeros_needed; local.j++) {
          string_index = "0" + string_index;
        }
      }
      frames[i-start_frame] = Image(base_path + string_index + ".png");
    }
  };

BPAE.SpriteAnimation.ToggleDirection = fun () {
  if (direction == "forward") {
    direction = "backward";
  }
  else {
    direction = "forward";
  }
};

BPAE.SpriteAnimation.GetIncrement = fun () {
  if (direction == "forward") {
    return 1;
  }
  else {
    return -1;
  }
};

BPAE.SpriteAnimation.Update = fun (delta, theta)
  {
    if (running)
    {
      actual_time += delta * speed * GetIncrement();
      if ((actual_time >= length &&  direction == "forward") ||
          (actual_time <= 0.0 && direction != "forward"))
      {
        if (loop != 0)
        {
          if (loop > 0) {
            loop--;
          }
          if (rebound) {
            ToggleDirection();
          }
          RePlay();
        }
        else
        {
          Stop();
          return;
        }
      }
      actual_frame = Math.Clamp(Math.Int(actual_time / frame_duration), 0, frames_number - 1);
      if (sprite)
        sprite.SetImage(frames[actual_frame].Rotate(theta));
    }
  };

BPAE.SpriteAnimation.Play = fun (start)
  {
    actual_time = start | actual_time;
    running = 1;
    Update(0);
  };

BPAE.SpriteAnimation.RePlay = fun ()
  {
    if (direction == "forward") {
      Play(0);
    }
    else {
      Play(length);
    }
  };

BPAE.SpriteAnimation.Pause = fun ()
  {
    running = 0;
  };

BPAE.SpriteAnimation.Stop = fun ()
  {
    actual_time = 0.0;
    running = 0;
  };
