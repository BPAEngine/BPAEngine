
# -------------------------------------------------------------------------
# BulletedPassword
# -------------------------------------------------------------------------

BulletedPassword = fun (config)
  {
    new_object =  [] | global.BulletedPassword | global.Object(config);
    new_object.class = "BulletedPassword";

    new_object.bullet_image_path = config.bullet_image_path  | "static/password_dialog/bullet.png";
    new_object.bullet_size = config.bullet_size  | 7;
    new_object.max_bullets = config.max_bullets | 50;

    return new_object;
  } | [];

BulletedPassword.Build = fun ()
  {
    local.bullet_config.image_path = bullet_image_path;
    bullet_config.width = bullet_size;
    bullet_config.height = bullet_size;
    bullet_config.opacity = 0;

    for (local.i = 0; local.i < max_bullets; local.i++)
    {
      bullet_config.x = bullet_size * i;
      bullet_config.id = "bullet_" + i;
      Add(StaticImage(bullet_config));
    }
  };

BulletedPassword.SetBullets = fun (number, max_width)
  {
    local.max_bullets_by_width = Math.Int((max_width | 10000) / bullet_size);
    bullets_number = Math.Min(number, Math.Min(max_bullets, max_bullets_by_width));
    for (local.i = 0; local.i < max_bullets; local.i++)
    {
      if (i >= bullets_number) {
        objects[i].SetOpacity(0);
      }
      else
      {
        objects[i].SetOpacity(1);
      }
    }
    return this;
  };

BulletedPassword.GetWidth = fun ()
  {
    return bullets_number * bullet_size;
  };

BulletedPassword.GetHeight = fun ()
  {
    return bullet_size;
  };
