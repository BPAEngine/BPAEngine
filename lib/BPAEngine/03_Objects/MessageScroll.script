
# -------------------------------------------------------------------------
# Message scroll
# -------------------------------------------------------------------------

MessageScroll = fun (config)
  {
    new_object =  [] | global.MessageScroll | global.Object(config);
    new_object.class = "MessageScroll";
    new_object.z = config.z | 10000;

    new_object.font_color = config.font_color | [0, 0, 0];
    new_object.font_type  = config.font_type | "Fixed";
    new_object.font_size  = config.font_size | 10;

    new_object.max_lines = config.max_lines | 10;
    new_object.max_width = config.max_width | 80;
    new_object.faded_lines = config.faded_lines | new_object.max_lines * 0.5;
    new_object.spacing = config.spacing | 1;

    for (local.i = 0; local.i < new_object.max_lines; local.i++) {
      new_object.lines[local.i] = ""; # Initialize the lines
      new_object.message_sprite[local.i] = Sprite();
      new_object.message_sprite[local.i].SetPosition(new_object.x, new_object.y + (local.i * new_object.font_size * (new_object.spacing + 1.0)), new_object.z);
    }
    return new_object;
  } | [];

MessageScroll.Add = fun (message)
  {
    # Shift messages
    for (local.i = 0; local.i < max_lines - 1; local.i++) {
      lines[local.i] = lines[local.i+1];
    }

    lines[max_lines - 1] = Image.Text(String.Truncate(message, max_width), font_color[0], font_color[1], font_color[2], 1, font_type + " " + font_size);

    # Re-positioning the text images
    for (local.i = 0; local.i < max_lines; local.i++) {
      message_sprite[local.i].SetImage(lines[local.i]);
    }
  };

MessageScroll.Update = fun (delta)
    {
      # Avoid updating coordinates, animations and so on
    };

MessageScroll.Hide = fun ()
  {
    for (local.i = 0; local.i < max_lines; local.i++) {
      message_sprite[local.i].SetOpacity(0);
    }
  };

MessageScroll.Show = fun ()
  {
    local.opacity = 1;
    for (local.i = 0; local.i < max_lines; local.i++) {
      if (local.i < faded_lines)
        local.opacity = 1.2 - (faded_lines - local.i) / faded_lines;
      message_sprite[local.i].SetOpacity(local.opacity);
    }
  };

MessageScroll.Build = fun ()
  {
    Show();
  };
