
# -------------------------------------------------------------------------
# Dialog simple/box
# -------------------------------------------------------------------------

Dialog = fun (config)
  {
    new_object =  [] | global.Dialog | global.Object(config);
    new_object.class = "Dialog";
    new_object.mode = config.mode | "simple";

    new_object.font_color = config.font_color | Color.FromPalette("White");
    new_object.font_type  = config.font_type | "Sans Bold";
    new_object.font_size  = config.font_size | 14;

    new_object.z = DIALOG_Z + 20; # Text must be in front

    new_object.background_color = config.background_color | "black";
    new_object.background_opacity = config.background_opacity | 0.6;

    new_object.background_image = Image("static/dialog/" + new_object.background_color + "_background.png");
    new_object.background_sprite = Sprite(new_object.background_image);
    new_object.background_sprite.SetPosition(0, 0, DIALOG_Z);
    new_object.background_sprite.SetOpacity(0);

    if (new_object.mode == "simple") {
      new_object.input_box_config.z =  -10; # DIALOG_Z + 10
      new_object.input_box_config.width = config.input_box_width | 300;
      new_object.input_box_config.height = config.input_box_height | 30;
      new_object.input_box_config.opacity = config.input_box_opacity | 0.75;
      new_object.input_box_config.color = config.input_box_color | "white";
      new_object.input_box = Box(new_object.input_box_config);

      new_object.input_text = Text(new_object.input_text_config);
    }
    else {

    }
    return new_object;
  } | [];

Dialog.Build = fun ()
  {
    background_sprite.SetImage(background_image.Scale(world.GetWidth(), world.GetHeight()));
    if (mode == "simple") {
      Add(input_box);
      Add(input_text);
    }
    else {

    }
  };

Dialog.Prompt = fun (prompt, entry)
  {
    sprite.SetImage(Image.Text(prompt, font_color[0], font_color[1], font_color[2], 1, font_type + " " + font_size)); # Prompt
    if (this.mode == "simple") {
      AlignToObject(world, "cm", "cm"); # Align prompt
      input_box.AlignToObject(this, "cb", "ct");
      input_box.MoveY(30);
      input_text.AlignToObject(input_box, "lm", "lm");
      input_text.MoveX(input_box.corner_size);
      input_text.SetText(entry); # Entry
    }
    else {
    }
    Show();
  };

Dialog.SetOpacity = fun (opacity)
  {
    background_sprite.SetOpacity(opacity * background_opacity);
    if (mode == "simple") {

    }
    else {

    }
    sprite.SetOpacity(opacity);

    for (local.i = 0; local.i < Array.Size(objects); local.i++)
    {
      objects[local.i].SetOpacity(opacity * objects[local.i].GetOpacity()); # Subobjects are opacity relative too
    }
  };
