
# -------------------------------------------------------------------------
# Dialog simple/box
# -------------------------------------------------------------------------

Dialog = fun (config)
  {
    new_object =  [] | global.Dialog | global.Object(config);
    new_object.class = "Dialog";
    new_object.mode = config.mode | "simple";
    new_object.z = DIALOG_Z;

    new_object.dimmer_config.color = config.background_color | "black";
    new_object.dimmer_config.opacity = config.background_opacity | 0.6;
    new_object.dimmer_config.z =  0; # DIALOG_Z
    new_object.dimmer = Dimmer(new_object.dimmer_config);

    new_object.input_box_config.z =  5; # DIALOG_Z + 5
    new_object.input_box_config.width = config.input_box_width | 300;
    new_object.input_box_config.height = config.input_box_height | 30;
    new_object.input_box_config.opacity = config.input_box_opacity | 0.75;
    new_object.input_box_config.color = config.input_box_color | "white";
    new_object.input_box = Box(new_object.input_box_config);

    new_object.prompt_config.z =  10; # DIALOG_Z + 10
    new_object.prompt_config.font_color = config.prompt_font_color | Color.FromPalette("White");
    new_object.prompt_config.font_type  = config.prompt_font_type | "Sans Bold";
    new_object.prompt_config.font_size  = config.prompt_font_size | 14;
    new_object.prompt = Text(new_object.prompt_config);

    new_object.input_text_config.z =  10; # DIALOG_Z + 10
    new_object.input_text_config.font_color = config.input_text_font_color | Color.FromPalette("Black");
    new_object.input_text_config.font_type  = config.input_text_font_type | "Sans";
    new_object.input_text_config.font_size  = config.input_text_font_size | 12;
    new_object.input_text = Text(new_object.input_text_config);

    if (new_object.mode == "simple") {
    }
    else {
    }
    return new_object;
  } | [];

Dialog.Build = fun ()
  {
    Add(dimmer);
    Add(prompt);
    Add(input_box);
    Add(input_text);
    if (mode == "simple") {
    }
    else {
    }
    for (local.i = 0; local.i < Array.Size(objects); local.i++)
    {
      objects[local.i].Build();
    }
  };

Dialog.Prompt = fun (text, entry)
  {
    AlignToObject(world, "cm", "cm");
    dimmer.AlignToObject(world, "lt", "lt");

    prompt.SetText(text);
    prompt.AlignToObject(this, "ct", "cb");
    prompt.MoveY(-10);

    input_box.AlignToObject(this, "cb", "ct");
    input_box.MoveY(30);

    input_text.SetText(entry);
    input_text.AlignToObject(input_box, "lm", "lm");
    input_text.MoveX(input_box.corner_size);

    if (this.mode == "simple") {
    }
    else {
    }
    Show();
  };

Dialog.SetOpacity = fun (opacity)
  {
    sprite.SetOpacity(opacity * background_opacity);
    if (mode == "simple") {
    }
    else {
    }

    for (local.i = 0; local.i < Array.Size(objects); local.i++)
    {
      objects[local.i].SetOpacity(opacity * objects[local.i].GetOpacity()); # Subobjects are opacity relative too
    }
  };
